// This file contains a template for the implementation of Robo prediction
// algorithm

#include "PredictionAlgorithm.hpp"
#include <iostream>
#include <cmath>
#include <unordered_map>

#include <vector>

struct RoboPredictor::RoboMemory {
  // Place your RoboMemory content here
  // Note that the size of this data structure can't exceed 64KiB!
 
  int len_a=1181;
  int len_b=818;
  int len_c=777;
  double mean_a=0.343025;
  double mean_b=0.867102;
  double mean_c=0.602286;
  double mean_else=0.122049;
  double window[10] = {mean_else,mean_else,mean_else,mean_else,mean_else,mean_else,mean_else,mean_else,mean_else,mean_else};
  int idsA[1181]={86,1188,2843,3800,3860,3868,4613,6417,8491,8620,8825,9447,10913,11274,11488,12526,12842,13131,13133,13861,13926,14858,14919,14980,17255,19332,19394,21012,21163,21419,22133,23060,23821,26416,27920,29403,29727,30604,31329,34382,34766,35304,35999,41330,41379,41488,41808,41920,42298,42392,42736,46503,48703,48774,50484,51687,51769,52244,53210,53814,54365,54914,56679,57643,57934,58790,59262,62658,63222,63748,64088,64281,65043,65813,66058,67385,67450,68764,69097,70314,70988,71401,72919,74880,75244,75415,75659,76274,77710,78341,78435,79969,79975,80767,80918,81342,82503,83729,84215,84857,84894,85017,85207,86767,87164,87304,87308,88638,89031,89746,90892,92624,92678,92831,93822,95150,95935,96358,97343,97376,97435,97935,99913,99978,101839,104614,104683,104854,104960,108988,109372,110164,110418,110453,110875,111204,111419,111808,114419,114742,115361,115737,116297,117471,118747,119120,119319,121293,121774,122585,122783,125499,126053,127674,128605,128649,129427,129760,130409,131896,132322,132793,133941,134469,135024,136323,138759,140444,140676,140890,141882,144688,148329,148468,149065,149587,149720,152011,152842,156149,157140,157181,157709,158000,158328,158572,159866,160576,160629,161266,162825,164364,164997,165807,166452,168889,170057,170356,171563,171849,172075,173349,175088,177230,177869,178298,179643,180579,182397,183805,183932,186516,187478,187566,188231,188610,188909,190675,194287,195632,197445,197749,198694,199805,199906,201591,201732,202536,202874,204919,206865,206992,208212,209786,210479,211118,211244,211499,211692,211827,211947,212591,213684,214013,214541,214685,214779,215695,216151,217257,217756,218413,218541,219150,220289,220753,221667,221832,224573,224803,224876,226434,226636,227453,227653,228290,228888,229167,229583,229685,229934,230300,231545,231826,232003,232443,234043,234052,235153,235365,236298,236494,239109,239150,240555,240699,241786,241925,242868,243016,243290,243561,244214,244638,244927,245812,247200,247358,247369,248908,249108,249491,252015,252594,253704,255104,256028,257002,257103,259018,261938,262392,263278,263507,263572,264083,264125,264338,264796,264798,267672,268329,268462,270061,270649,272235,272607,273245,273520,274524,275025,275511,275610,277397,277409,278600,278810,279195,279618,281668,281806,281948,282404,282468,282703,282741,283337,283630,283791,285694,287052,288321,289559,289931,290644,290683,291194,292271,293486,295079,297961,299710,300575,300649,300771,300785,300893,301802,304671,306349,307045,308020,309065,309241,309456,309780,311721,311831,311927,312232,312548,314089,316715,317117,317282,318569,318573,318689,319378,319554,321019,321562,322173,323750,324707,326224,327537,328472,329999,330087,330924,335569,335750,336326,339109,342668,343806,343937,346142,346556,347508,348255,348475,349053,350223,352854,354332,354746,355278,356691,357417,357425,357821,357974,358042,358274,360747,361110,361412,363080,364982,365510,368203,368629,369398,369965,370741,371418,371704,372151,372477,373288,374185,374745,375229,376681,377600,377959,379447,381080,381760,382519,382989,383141,383317,384146,384798,387054,388345,388685,388859,389693,393563,394308,394346,394363,394849,394944,397297,398141,398461,398938,399788,401193,401224,401919,402183,402271,402567,403093,403610,404469,404795,404914,405011,405683,406305,406309,406405,407307,407757,408105,408397,409386,409413,409590,409699,410308,412436,412538,416817,417089,418417,418776,421123,421900,421990,422383,422857,424082,425306,425639,426456,426721,427565,428405,428770,429583,430273,430929,431333,432446,432466,434345,435048,436488,437276,440711,441273,442333,442808,443432,444092,444123,444618,444678,445235,445628,445844,446605,448518,449019,449411,450648,453348,454282,454362,455073,455245,455628,455739,455843,456248,456437,457103,458784,461619,461842,463945,464636,465343,466253,468335,470365,471650,473510,474940,475346,475863,477807,479262,479390,481876,482512,482550,484436,485596,486511,487424,488073,488752,488874,490193,490451,490734,491287,491453,493329,493952,494266,495251,496954,497160,497343,498523,500311,500622,502039,503664,503772,503861,505230,505427,506843,506915,507041,507769,507950,507971,508127,509817,511095,511697,512839,513439,514655,514870,515454,515694,516832,517149,518042,518493,519398,521093,521237,521369,522353,522415,523827,524101,524243,526332,527060,527870,528043,528478,529156,531205,531287,531551,531582,534679,535655,535667,536615,538251,538615,540169,543536,543770,544001,544903,545009,545816,546805,547373,548494,548997,549401,551592,552283,554443,555929,556215,556232,557708,557869,559070,559289,560234,561057,561307,561355,561544,561909,563868,564176,564421,564609,564687,567446,567510,568032,569075,569779,572108,572639,573840,574838,577454,577559,577723,577834,579482,581421,581563,583529,585722,585752,587304,588333,590022,591534,592746,592758,592769,597012,597654,598402,598845,599395,600200,600476,600820,601958,602790,602808,603063,605108,605380,606355,608004,609933,610207,613850,614408,615136,616318,617952,618432,618433,622742,622840,623276,623727,624316,625338,625916,626080,626844,629473,629502,629507,629853,630345,630410,630842,631059,631311,631387,631606,634034,635910,638000,638049,638071,640726,640739,640800,641703,641995,644426,644885,645557,646584,646594,646613,647302,648892,650168,652422,653254,657215,657748,658749,660256,660382,661505,662392,662637,662730,663806,665095,666246,667207,669009,670248,671519,672933,674577,675425,678148,678687,679816,679849,683068,683213,683739,684479,684563,686743,687014,687459,687631,688084,688514,688653,689257,689481,689974,690479,691267,691573,692282,693168,694626,695237,695572,695748,696519,696632,696709,697446,698477,700069,700445,700638,700891,700986,701477,702300,703353,703716,703956,704198,707338,708444,708566,708843,709395,709427,709780,710271,710407,712761,713480,713903,715647,716050,716691,718540,718603,718949,720076,720768,720948,722559,722760,723689,724212,724837,725387,725758,727226,730727,730811,730925,731074,731336,731908,732852,732955,733695,734508,734565,734796,735958,736425,736735,737809,739877,740418,740466,740718,741712,742072,742531,743039,744453,745945,747562,747664,749087,751561,752698,752747,753430,754072,754200,755450,757239,757737,760434,762165,762697,764121,764628,765088,765298,766752,769468,769788,770082,771089,771150,772106,774321,775165,776495,776712,777365,777520,778517,779237,779751,779935,780010,780362,782064,782190,782192,782300,782680,783543,783797,783810,784130,784641,784909,786577,786887,787401,787948,788311,788642,789285,790222,790787,791021,791473,791990,792113,792768,793234,793574,794305,794913,796309,796703,799149,799831,800331,801208,802672,803062,803102,803284,804813,806190,807553,807602,807825,808406,808679,809060,809435,809455,809866,813079,813112,814182,814795,815589,816398,817035,817240,818017,818060,819647,819701,819733,820120,820473,820967,821571,821750,823036,823640,824149,824768,825182,826053,827180,828054,829658,829949,831536,832335,833339,833480,833885,834139,837701,838512,839364,840114,841109,841178,842234,842318,842850,843537,843871,843959,844669,846089,846112,846355,846427,847717,848445,848528,848656,848819,850063,853747,854006,854772,854827,858587,858629,859747,859847,864024,867387,867927,867961,868161,868911,869694,871620,871869,871887,872843,874753,875440,875900,877550,877878,878710,879774,881550,882012,882171,882240,883244,884803,885314,886429,888446,889170,892051,893468,893721,893883,894165,894809,895169,896876,897117,898577,898996,900586,902245,903808,904554,906698,907103,907675,907705,908110,908168,910711,912424,914030,914561,914605,915362,915813,916966,917702,918338,918699,919684,920856,921526,922779,925092,925994,926748,926948,927052,927570,928118,930681,931205,931617,932851,932921,934451,934636,937185,937375,942470,944351,946748,947766,949800,950872,951815,951840,952061,952283,952538,952576,953145,953369,953452,954067,955688,957157,959145,959816,959856,961271,961822,963278,963369,965661,966522,967081,967432,976447,980367,981113,981129,982526,983292,983399,985227,985700,986109,986728,986923,987605,987796,988549,988754,989475,990278,990370,990777,992130,992990,993198,994112,994366,995650,995910,998032};
  int idsB[818]={640,3483,4204,4714,5124,6262,6636,8224,8285,8793,13562,13639,15880,18016,21562,25211,29954,31708,32427,32922,34698,38131,40865,42679,43955,44449,44532,45463,45998,48390,49597,50506,50626,51760,53521,55653,56212,58314,58483,58827,60199,60538,60752,61882,64290,65129,66795,67190,69267,71378,71912,72593,73052,78707,81105,81243,81293,82880,83700,84320,84638,86843,87229,87660,88300,88706,89248,91436,91455,94281,94320,95156,95786,96240,99430,100518,102668,105887,105895,108362,108394,109609,109758,109794,111442,112464,112672,113299,115500,116298,116740,117498,118915,120299,121057,122028,122108,122381,124428,124998,127155,129132,130238,130286,132181,132916,133588,135939,136069,136296,136493,137632,138206,138250,141068,141083,144985,146567,147252,150018,150957,152190,152341,152595,153592,155507,155582,156159,156468,156898,160563,161175,161475,161708,161798,163438,166578,167733,168015,168357,168365,168597,170121,171044,172879,172933,173558,173918,174602,175458,175596,175714,176757,177484,178379,178449,179716,181942,182162,182752,187094,187353,192229,193061,194508,198704,198948,199870,200609,203998,204173,204362,206743,208691,208836,213278,215361,215526,218599,221713,223275,223864,225417,227324,228076,231071,231273,233321,233460,233665,233848,236765,237039,237139,237795,238896,239196,239496,239910,241896,243021,243728,243980,244578,245762,246912,248137,248559,249802,250580,251202,251390,255570,257930,258189,258841,260729,266484,266928,267741,268416,268875,271020,271503,272343,273103,274004,275357,276062,277799,279171,279794,281062,281522,283836,285828,288649,288854,289268,289397,289608,290098,291256,292498,294528,294660,295132,296066,297703,297944,298324,298575,299425,302969,304086,304757,305816,306948,307444,308069,308755,308982,309191,309910,309975,310776,311379,311445,311474,311505,312613,315900,316686,318881,319606,319927,320087,320140,320583,322945,323089,323637,323726,324339,324640,325122,325344,326117,326335,327347,328836,329791,329933,330690,336099,337833,338709,340679,341542,343238,343657,344858,345370,345782,347694,349401,349760,351071,351083,361562,361872,362585,362893,363561,364350,365833,366152,366871,368082,371660,374081,375427,376663,377584,378531,380343,380908,382543,384395,386286,386952,388868,388993,389587,394643,395725,397774,400170,404088,404950,405290,405324,406775,407310,407641,408480,408606,411061,413049,415138,417847,418069,419644,420821,422234,422731,422855,423663,425058,426948,429259,429528,430254,431850,433977,435167,435673,437172,437474,438878,438882,438942,440593,440748,441689,442384,444155,444361,447314,447413,448374,449262,449883,450257,451119,452102,452779,454892,455817,456006,456684,456939,457455,459699,461254,461399,462666,463141,465127,466172,466223,467625,471844,473448,473969,476083,476096,476117,476469,477568,478502,480164,480453,482545,482698,483895,485084,485161,485320,485784,486857,488384,489275,490911,493073,493937,494581,495213,496123,500831,501162,501462,501729,502284,502453,503153,504302,506334,508840,511101,512814,512862,515068,515679,516031,517034,517159,518898,519847,520623,520819,521721,522135,522263,527794,529333,529643,530448,530897,531982,532438,533401,533567,533914,536354,537001,538091,541899,543262,543347,544244,544516,547139,548959,553433,556081,556425,556890,558931,559897,561095,562106,564028,564775,564841,565952,569167,571824,572309,572973,573280,573450,574584,574712,575879,575880,576136,578653,578803,579022,581089,585140,587310,588172,592132,592155,592319,592558,594328,594571,595157,595745,597230,597587,600210,600289,600639,600909,601117,602063,605099,606901,606970,607845,612103,616076,618542,619495,620796,622185,622620,622717,623107,624864,627453,638840,646113,646312,646883,647786,649440,650785,653003,653449,653795,654491,659273,660393,661018,661301,662491,664633,665331,666854,667619,668487,670519,670653,670997,671523,673721,674170,674434,675832,675966,677024,677046,680471,681928,682355,682399,689507,690145,696095,696802,697228,697502,698407,699901,705257,705834,706396,706454,706590,706865,706904,706976,707658,707889,707922,713715,714483,715866,717028,719338,720628,720930,722434,723111,724083,725042,726085,726414,728436,729178,729608,730162,732259,733011,733106,734361,739702,739788,740675,741043,741989,743096,744653,744884,745215,748628,749109,749738,750645,753347,753855,755226,756274,756368,757602,759098,762307,764724,765955,767773,770612,770937,773665,774541,775371,777511,778458,778459,779405,781268,781442,785671,785999,787076,788010,789321,790729,790843,794132,795217,796124,797290,797490,799124,799258,799313,802383,802850,805270,808056,808080,810679,810873,816422,817319,817696,818285,821560,821793,822683,822895,823860,824976,825065,827236,831553,832089,832746,836745,839997,840482,841377,843475,843736,843802,843966,845580,846230,848446,849209,850944,851878,852847,853026,853069,853240,853864,855478,859360,865139,868746,869029,869089,870997,871310,873421,874015,874206,876563,877537,879363,880002,882805,882882,883898,885174,886817,887962,889823,891048,891201,891426,893647,893881,894989,895392,896792,896978,899480,899928,900615,901405,908891,911597,913473,913680,917055,917115,919624,920607,921145,922584,922998,924995,925913,928615,931395,939262,939388,940637,940988,942380,945734,945882,946423,948044,948601,949070,950363,951727,952096,952635,952996,953219,953441,953470,953738,954340,954445,954579,956054,956214,957060,958494,958660,958886,960665,962093,962431,962563,963151,963876,964142,967097,970031,970824,971924,972183,972964,973610,973795,975847,977475,981139,982415,983008,983030,986090,987841,989030,989193,990537,990619,991391,991652,991950,992014,993866,996204,996820,997533,997662,999068};
  int idsC[777]={789,1138,3593,3661,3707,4735,4903,5961,7136,8128,12256,18430,21776,22501,23377,25423,25639,26118,27686,29137,30161,31677,32353,34925,35041,36772,39916,44094,46387,46741,47282,49685,50064,50078,52700,53039,54652,56968,57656,60158,60373,60989,61219,63149,64328,65320,65368,67424,69575,69590,69722,71454,72981,73287,77839,78777,79561,79609,80728,82996,83067,84562,86321,86742,87023,87995,89734,89758,91041,93852,96328,97876,98096,98945,101032,104687,105075,105241,106106,109588,110929,111100,111133,111669,113481,115986,116586,117533,117563,121910,122781,126054,127344,127552,128665,133934,134057,134277,135487,135627,136050,136315,136489,136772,136958,138504,139749,140024,140134,140980,142584,143317,145141,148647,149389,150224,150241,150641,152085,152550,157285,160970,162015,167173,167581,173091,173400,178104,178683,181156,183347,186003,186054,186293,186954,186973,187450,188097,188391,190442,192088,192565,192992,193163,194465,195694,195933,196055,197663,197727,198083,198124,199333,200992,205916,206751,207034,208436,208830,208861,209690,210254,212897,214243,214728,215848,218217,219063,223852,223890,224002,224406,224579,225648,226132,226918,230899,232725,233347,233741,235353,236943,240188,240326,242295,242738,243477,244941,245841,247410,249132,249396,250812,251698,251801,252616,253811,255196,257822,258258,258271,261106,261442,261972,262790,263000,265494,267772,269611,270338,270648,272291,272511,273667,274823,276400,279772,281397,281398,283777,283796,284785,287881,288371,288820,288961,289336,290008,291969,292668,297022,299138,300250,302727,302889,303525,304080,304527,304666,304729,304820,305110,308543,309687,309994,310246,311192,312264,314068,319234,319665,320234,322520,324255,324878,327578,328105,329216,329671,331186,332653,334242,337171,337218,338694,340271,340346,341095,342264,342942,343016,343933,344338,346421,347922,348375,348585,349436,349570,350168,350346,353074,353211,353476,358613,358653,359538,362573,364187,365173,366171,366396,367637,367767,370361,372469,376685,376939,376988,377119,378521,380072,380245,381676,381688,383364,383452,384070,385899,388557,388804,390918,391595,392125,394283,394520,396771,396903,401722,402266,402332,402430,402474,403359,404312,404490,404548,405617,406815,408954,409920,410846,412904,413062,413659,413669,414452,414668,415505,415605,416260,418087,420175,421289,422512,423185,423513,423801,424401,425499,426309,426367,426459,427724,429029,431296,431852,432822,435257,436874,437434,437611,440389,444974,450799,455710,457614,457864,459560,460891,461118,461442,461476,463428,463477,463615,464852,466709,470886,472379,473568,477041,477791,478177,478537,480879,483189,484238,484864,487479,489119,494311,494666,496170,496309,497518,499828,500978,501169,501333,502953,505990,506373,510709,511461,511862,517472,519589,521760,521768,525875,526617,527333,527967,528183,529739,530955,531147,533953,534130,537543,537686,540424,541851,543127,543904,550958,551991,552169,553666,554475,554699,554722,557727,561314,561999,563522,563661,563667,564325,565178,565461,566353,567249,567504,569754,573399,575373,578666,578976,581022,581130,582970,585519,587468,587726,590537,593164,593870,594468,596153,597324,598003,599715,602041,603374,603614,604396,604518,605733,607737,608524,609672,611856,613813,617395,617420,619558,619826,624407,624899,625091,625615,626112,627584,628162,628373,628664,629537,629924,630987,632061,632464,634273,635225,636980,637821,640682,641183,642396,642709,644278,647245,648587,648722,649576,650216,650306,650491,651163,653170,653873,656585,657062,657720,660201,662755,663981,666512,667146,668237,669118,670935,671128,671136,671633,674128,674326,675450,677658,679030,680663,680763,681181,681378,684864,685629,687460,687560,687870,689149,691651,692637,694174,694385,699377,700496,701714,702190,705378,705734,706322,707618,709004,714155,715237,718257,718660,718826,719210,722333,723234,727142,727960,729714,730932,731267,731867,732338,732359,734162,735950,735970,738559,741091,741943,742200,746305,746652,746729,748592,748607,749050,749369,749746,751497,752949,753068,755137,755216,755949,757055,757854,757922,758587,760215,763940,765266,765315,767235,769836,769984,770630,770829,771940,772186,778592,778740,780992,783105,783534,784140,785146,785524,785799,787175,788238,789304,792403,793395,793564,795954,796359,799095,799347,800164,800813,800951,802329,802690,804536,807439,808809,809436,811442,813328,814809,816253,817236,821068,821939,822980,822994,823108,823351,826690,829041,829368,829840,829934,831563,831790,832692,834160,835028,835324,836408,837319,837971,839368,840505,840954,843636,843637,844756,846088,851250,854467,855503,855704,859807,865928,866261,868274,869536,870329,871133,877190,878318,879624,880626,880643,880839,881442,882421,882499,886410,886943,887404,888013,890869,891155,891247,893536,894278,897140,897385,899026,900124,904920,906114,906119,909342,909444,912956,913953,913979,914880,915598,915729,915863,916062,916125,916663,916700,918930,923404,923634,924365,924683,924861,926338,933835,934042,934439,935412,936225,936918,938089,938282,938669,938817,940777,942313,942902,943538,943731,943894,944004,945621,946330,946548,949328,950007,957095,958255,958448,961386,961807,964456,965674,971587,974156,974512,975162,976300,976355,977264,977714,986237,986976,987200,988922,988945,989043,989166,990868,991116,991153,991172,992144,992347,993641,996333,996564,996706,999660};
  
bool binarySearch(const int array[],int size, int target) {
    int left = 0;
    int right = size - 1;

    while (left <= right) {
        int mid = left + (right - left) / 2;

        if (array[mid] == target) {
            return true;  // Target found
        } else if (array[mid] < target) {
            left = mid + 1;  // Target may be in the right half
        } else {
            right = mid - 1;  // Target may be in the left half
        }
    }

    return false;  // Target not found
}
  double find_mean(int id){
    if (binarySearch(idsA,len_a,id)==true){
      return mean_a;
    }
    else if (binarySearch(idsB,len_b,id)==true){
      return mean_b;
    }
    else if (binarySearch(idsC,len_c,id)==true){
      return mean_c;
    }
    else  {
      return mean_else;
    }
  }
  
  struct NeuralNetwork {
        double weights[10]={
        -5.6851527e-04,
        -1.3044588e-03,
         2.3654027e-02,
         8.1186965e-03,
        -2.8893150e-02,
        -4.6667601e-03,
         1.0491763e-02,
         3.5182561e-03,
        -2.1670677e-02,
         5.6857872e+00
    };
        double bias=-2.7753904;

        NeuralNetwork() {
            
        }

        double sigmoid(double x) {
            // Sigmoid activation function
            return 1 / (1 + exp(-x));
        }

        double predict(double input[10]) {
            // Calculate the weighted sum of inputs
            double weightedSum = 0;
            for (int i = 0; i < 10; ++i) {
                weightedSum += input[i] * weights[i];
            }
            // Add bias
            weightedSum += bias;

            // Apply sigmoid activation function
            return std::round(sigmoid(weightedSum));
        }
    };


    

};
RoboPredictor::RoboMemory roboMemory;
void update_window(int x){
  for(int i=0;i<10;i++){
    if (i==9){
  roboMemory.window[i]=roboMemory.find_mean(x);

    }else{
        roboMemory.window[i]=roboMemory.window[i+1];

    }
  
    }

  }
bool RoboPredictor::predictTimeOfDayOnNextPlanet(
    std::uint64_t nextPlanetID, bool spaceshipComputerPrediction) {
  // Robo can consult data structures in its memory while predicting.
  // Example: access Robo's memory with roboMemory_ptr-><your RoboMemory
  // content>

  // Robo can perform computations using any data in its memory during
  // prediction. It is important not to exceed the computation cost threshold
  // while making predictions and updating RoboMemory. The computation cost of
  // prediction and updating RoboMemory is calculated by the playground
  // automatically and printed together with accuracy at the end of the
  // evaluation (see main.cpp for more details).

  // Simple prediction policy: follow the spaceship computer's suggestions
  update_window(nextPlanetID);
  RoboPredictor::RoboMemory::NeuralNetwork neuralNetwork;
  double prediction = neuralNetwork.predict(roboMemory.window);
  if (prediction==1){
    return true;
  }
  else{
    return false;
  }
}

void RoboPredictor::observeAndRecordTimeofdayOnNextPlanet(
    std::uint64_t nextPlanetID, bool timeOfDayOnNextPlanet) {
  // Robo can consult/update data structures in its memory
  // Example: access Robo's memory with roboMemory_ptr-><your RoboMemory
  // content>

  // It is important not to exceed the computation cost threshold while making
  // predictions and updating RoboMemory. The computation cost of prediction and
  // updating RoboMemory is calculated by the playground automatically and
  // printed together with accuracy at the end of the evaluation (see main.cpp
  // for more details).

  // Simple prediction policy: do nothing
  
  
}


//------------------------------------------------------------------------------
// Please don't modify this file below
//
// Check if RoboMemory does not exceed 64KiB
static_assert(
    sizeof(RoboPredictor::RoboMemory) <= 65536,
    "Robo's memory exceeds 65536 bytes (64KiB) in your implementation. "
    "Prediction algorithms using so much "
    "memory are ineligible. Please reduce the size of your RoboMemory struct.");

// Declare constructor/destructor for RoboPredictor
RoboPredictor::RoboPredictor() {
  roboMemory_ptr = new RoboMemory;
}
RoboPredictor::~RoboPredictor() {
  delete roboMemory_ptr;
}
